{
  "permissions": {
    "allow": [
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(gh pr create --base milestone/M0-foundations --title \"docs(A0): Architecture Adapters & Circuit Breakers\" --body \"$(cat <<''EOF''\n## Summary\nCompletes ticket A0: Architecture Guidelines setup for M0-foundations milestone.\n\n**Deliverables:**\n- `/docs/architecture/adapters.md` - Provider-agnostic TypeScript adapter interfaces with comprehensive documentation\n- `/src/config/circuit-breakers.ts` - Circuit breaker configurations with SLA thresholds and monitoring\n\n## Changes Made\n\n### 1. Adapter Interfaces Documentation\nCreated `/docs/architecture/adapters.md` with:\n- **UploadAdapter**: Resumable multipart uploads with progress tracking\n- **TranscriptionAdapter**: Speech-to-text with word-level timestamps (AssemblyAI → Deepgram fallback)\n- **CompositionAdapter**: Video editing with cuts, intro/outro, subtitle burn-in (Shotstack → Cloudinary fallback)\n- **EncodingAdapter**: Final H.264 MP4 encoding with checksum verification (Mux → Coconut fallback)\n- Filler-word detection logic (dictionary-based + confidence thresholds)\n- Retry strategy with exponential backoff (2s/4s/8s, max 3 attempts)\n- Circuit breaker pattern for provider switchover\n\n### 2. Circuit Breaker Configuration\nCreated `/src/config/circuit-breakers.ts` with:\n- **Thresholds**: 5 consecutive failures OR SLA breach → switch to fallback provider\n- **States**: CLOSED (normal) → OPEN (failed) → HALF_OPEN (testing) → CLOSED\n- **Metrics tracking**: Latency p95, error rate, uptime percentage, cost per clip\n- **Service-specific configs**: Transcription, Composition, Encoding, Background Removal (deferred), AI Script, Moderation\n- **Cost alerts**: Monthly budget ($500), per-clip threshold ($0.50), daily projection\n- **Webhook monitoring**: Delivery rate tracking (min 99%), processing time limits\n\n## Architecture Decisions\n\n### Adapter Pattern Benefits\n- **Provider Independence**: Swap vendors with no mobile client changes\n- **Type Safety**: TypeScript interfaces enforce contract compliance\n- **Error Handling**: Unified error codes with retryable flags\n- **Testing**: Mock adapters for unit tests\n\n### Circuit Breaker Strategy\n- **Fast Failover**: 5 failures (≈10-15s detection time) triggers switchover\n- **Graceful Recovery**: HALF_OPEN state tests primary before full restoration\n- **Cost Protection**: SLA breach includes cost thresholds to prevent budget overruns\n- **Observable**: State changes logged for monitoring dashboards\n\n### Retry Logic\n- **Exponential Backoff**: 2s → 4s → 8s (prevents thundering herd)\n- **Selective Retries**: Only 429/500/502/503/504 errors retried\n- **Max 3 Attempts**: Limits wasted processing time/cost\n- **Idempotency**: Webhook handlers must be idempotent for duplicate delivery\n\n## Testing Checklist\n- [ ] All TypeScript interfaces compile without errors\n- [ ] Circuit breaker configs export correctly\n- [ ] SLA thresholds align with vendor-evaluation-2025.md cost estimates\n- [ ] Environment overrides work (test/development modes)\n- [ ] JSON export function produces valid monitoring config\n\n## Integration Roadmap\n**M1 (Week 3-4):**\n- Implement `UploadAdapter` with tus protocol\n- Add progress callbacks for recording screen\n\n**M2 (Week 5-6):**\n- Implement `TranscriptionAdapter` (AssemblyAI primary)\n- Implement `CompositionAdapter` (Shotstack primary)\n- Implement `EncodingAdapter` (Mux primary)\n- Deploy circuit breakers with logging\n\n**M3 (Week 7):**\n- Add Deepgram fallback for transcription\n- Test circuit breaker switchover with simulated failures\n\n**M4 (Week 8):**\n- Add Cloudinary fallback for composition\n- Tune circuit breaker thresholds based on POC data\n\n## References\n- plan.md §5.4: Provider-Agnostic Processing Contract\n- plan.md §6.2-6.5: Vendor Strategy & Adapter Specifications\n- vendor-evaluation-2025.md §4.2: Processing Pipeline Flow\n- vendor-evaluation-2025.md §7: API Integration Contract & Schema Mapping\n- CLAUDE.md: External API Integration section\n\n## Acceptance Criteria (All Met)\n- [x] `/docs/architecture/adapters.md` exists with all 4 adapter interfaces defined\n- [x] `/src/config/circuit-breakers.ts` exists with types + config\n- [x] CODEOWNERS file at `/.github/CODEOWNERS` (completed by Orchestrator)\n- [x] PR template at `/.github/PULL_REQUEST_TEMPLATE.md` (completed by Orchestrator)\n- [x] Retry/backoff pattern documented (2s/4s/8s, max 3 attempts)\n- [x] Circuit breaker thresholds: 5 failures → switchover\n- [x] Provider switchover: <5min cutover target\n\nGenerated with [Claude Code](https://claude.com/claude-code)\nEOF\n)\")",
      "Bash(if [ -f \"package.json\" ])",
      "Bash(then cat package.json)",
      "Bash(else echo \"No package.json found\")",
      "Bash(fi)"
    ],
    "deny": [],
    "ask": []
  }
}
