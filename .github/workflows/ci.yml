name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  enforce-no-mocks-policy:
    name: Enforce No-Mocks Policy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for prohibited terms in diffs
        run: |
          git diff --cached origin/main...HEAD | tee changes.diff
          disallow='lorem ipsum|placeholder|TODO: mock|fake_key_|example\.com/api'
          if grep -Ei "$disallow" changes.diff; then
            echo "❌ No-Mocks policy violation detected in diff."
            exit 1
          fi
          echo "✅ No prohibited terms found in diff"

      - name: Scan source for mock imports
        run: |
          echo "Scanning for mock imports in production code..."
          if grep -rn --include='*.ts' --include='*.tsx' \
            --exclude-dir=__tests__ \
            --exclude-dir=__mocks__ \
            --exclude-dir=node_modules \
            --exclude='*.test.*' \
            --exclude='*.spec.*' \
            -E "from ['\"].*/__mocks__/|from ['\"].*/mocks/|MockM2Gateway|from ['\"].*/stubs/" \
            src/; then
            echo "❌ Mock imports detected in production code"
            exit 1
          fi
          echo "✅ No mock imports found in production code"

      - name: Verify no mock fallbacks in gateway
        run: |
          echo "Checking for mock fallback patterns..."
          if grep -rn --include='*.ts' --include='*.tsx' \
            --exclude-dir=__tests__ \
            --exclude-dir=__mocks__ \
            -E "USE_MOCK.*=.*true|new Mock.*Gateway\(\)" \
            src/; then
            echo "❌ Mock fallback pattern detected"
            exit 1
          fi
          echo "✅ No mock fallback patterns found"

  typecheck:
    name: TypeScript Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - run: npm ci
      - run: npm run typecheck

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - run: npm ci
      - run: npm run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - run: npm ci
      - run: npm test -- --coverage --silent

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: coverage/
